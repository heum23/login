<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <style>
      /* 기본 스타일 초기화 */
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: "Arial", sans-serif;
        background-color: #f9f9f9;
        color: #333;
        line-height: 1.6;
        padding: 20px;
      }

      h1,
      h3 {
        text-align: center;
        color: #333;
      }

      h1 {
        margin-bottom: 20px;
      }

      h3 {
        margin-top: 20px;
      }

      form {
        background-color: #ffffff;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        margin: 20px 0;
        max-width: 500px;
        margin-left: auto;
        margin-right: auto;
      }

      form input[type="file"] {
        display: block;
        margin: 10px 0;
        padding: 10px;
        border-radius: 5px;
        background-color: #f3f3f3;
        border: 1px solid #ccc;
        width: 100%;
      }

      form input[type="text"] {
        display: block;
        margin: 10px 0;
        padding: 10px;
        border-radius: 5px;
        border: 1px solid #ccc;
        width: 100%;
      }

      form button {
        background-color: #4caf50;
        color: white;
        border: none;
        padding: 12px;
        border-radius: 5px;
        cursor: pointer;
        width: 100%;
        font-size: 16px;
        transition: background-color 0.3s;
      }

      form button:disabled {
        background-color: #ccc;
        cursor: not-allowed;
      }

      form button:hover {
        background-color: #45a049;
      }

      /* 파일 미리보기 */
      .files1,
      .files {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 15px;
        margin-top: 20px;
      }

      .files1 img,
      .files img {
        width: 300px;
        height: 300px;
        object-fit: cover;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      }

      .files1 {
        margin-top: 20px;
      }

      .files {
        margin-top: 40px;
        flex-wrap: wrap;
        justify-content: center;
      }

      input[type="file"]::file-selector-button {
        background-color: #4caf50;
        color: white;
        border: none;
        padding: 10px;
        border-radius: 5px;
        cursor: pointer;
      }

      input[type="file"]::file-selector-button:hover {
        background-color: #45a049;
      }
    </style>
  </head>
  <body>
    <!-- single -->
    <h1>파일 한개 올리기!</h1>
    <form
      id="formData1"
      onsubmit="submitForm1(event)"
      enctype="multipart/form-data"
    >
      <input type="file" name="files" /><br />
      <input type="text" name="title" />
      <button type="submit">업로드</button>
    </form>
    <h3>파일한개</h3>
    <div class="files1"></div>
    <h1>파일 한개 올리기!</h1>
    <form
      id="formData"
      onsubmit="submitForm(event)"
      enctype="multipart/form-data"
    >
      <input type="file" name="files" multiple /><br />
      <input type="text" name="title" />
      <button type="submit">업로드</button>
    </form>
    <h3>파일여러개</h3>
    <div class="files"></div>
  </body>
  <script>
    const submitForm1 = (event) => {
      event.preventDefault(); // 기본 폼 제출 방지
      document.querySelector(".files").innerHTML = "";
      const form = document.getElementById("formData1");
      const formData = new FormData(form);
      console.log(formData);
      axios({
        method: "post",
        url: "/uploads",
        data: formData,
        headers: {
          "Content-Type": "multipart/form-data", // 멀티파트 폼 데이터 헤더 설정
        },
      })
        .then((res) => {
          document.querySelector(
            ".files1"
          ).innerHTML += `<img style="width:300px; height:300px;" src="/uploads/${res.data.url}" />`;
        })
        .catch((error) => {
          console.error("Error:", error);
        });
    };

    const submitForm = (event) => {
      event.preventDefault(); // 기본 폼 제출 방지
      document.querySelector(".files").innerHTML = "";
      const form = document.getElementById("formData");
      const formData = new FormData(form);
      console.log(formData);
      axios({
        method: "post",
        url: "/upload",
        data: formData,
        headers: {
          "Content-Type": "multipart/form-data", // 멀티파트 폼 데이터 헤더 설정
        },
      })
        .then((res) => {
          document.querySelector(".files").innerHTML += res.data.url.map(
            (item) =>
              `<img style="width:300px; height:300px;" src="/uploads/${item}" />`
          );
        })
        .catch((error) => {
          console.error("Error:", error);
        });
    };
  </script>
</html>
